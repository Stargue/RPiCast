#*********************************************************************
# RPiCast ( Screencasting application using RaspberryPi )
#
# Copyright (C) 2014 Anshul Routhu <anshul.m67@gmail.com>
#
# All rights reserved.
#
# This file Makefile.cross is part of RPiCast project
#
# RPiCast is a free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#*********************************************************************/

TOOLCHAINPATH:=rpi-toolchain/arm-bcm2708/gcc-linaro-arm-linux-gnueabihf-raspbian/bin
CROSSPREFIX:=$(TOOLCHAINPATH)/arm-linux-gnueabihf-
BUILD_PATH:=rpi-build
RPATH:=rpi-staging/usr/lib/
CC:=$(CROSSPREFIX)gcc
CXX:=$(CROSSPREFIX)g++
CFLAGS:=-Wall -g -O2 -Wl,-rpath=$(RPATH)
TARGET:=$(BUILD_PATH)/rpicast-server
TARGET_LIB:=$(BUILD_PATH)/librpicast-server.so

EXT_LDLIBS:=-lcurl -lUnitTest++ -pthread -lavdevice         \
            -lavfilter -lpostproc -lavformat -lavcodec      \
            -ldl -lXv -lva -lXfixes -lXext -lX11 -ljack     \
            -lasound -lSDL -lx264 -lbz2 -lz -lrt            \
            -lswresample -lswscale -lavutil -lm

EXT_LDPATH:=-Lrpi-staging/usr/lib
LDFLAGS:=-Lrpi-build/ -lrpicast-server

############ ----- rpi-OpenMax variables ----- ##############

OMXSTAGING:=rpi-staging
OMXCFLAGS:=-DSTANDALONE -DARM_CROSS -D__STDC_CONSTANT_MACROS -D__STDC_LIMIT_MACROS -DTARGET_POSIX                          \
           -D_LINUX -fPIC -DPIC -D_REENTRANT -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 -U_FORTIFY_SOURCE    \
           -Wall -g -DHAVE_LIBOPENMAX=2 -DOMX -DOMX_SKIP64BIT -ftree-vectorize -pipe -DUSE_EXTERNAL_OMX        \
           -DHAVE_LIBBCM_HOST -DUSE_EXTERNAL_LIBBCM_HOST -DUSE_VCHIQ_ARM -Wno-psabi

OMXLDFLAGS:=-L$(OMXSTAGING)/opt/vc/lib/ -lilclient -lGLESv2 -lEGL -lopenmaxil -lbcm_host -lvcos -lvchiq_arm -lpthread -lrt -lm   \
            -L$(OMXSTAGING)/opt/vc/src/hello_pi/libs/ilclient/ -L$(OMXSTAGING)/opt/vc/src/hello_pi/libs/vgfont/ 
            
OMXINC:=-I$(OMXSTAGING)/opt/vc/include/ -I$(OMXSTAGING)/opt/vc/include/interface/vcos/pthreads                        \
         -I$(OMXSTAGING)/opt/vc/include/interface/vmcs_host/linux -I$(OMXSTAGING)/opt/vc/src/hello_pi/libs/ilclient   \
         -I$(OMXSTAGING)/opt/vc/src/hello_pi/libs/vgfont

############ ----- Project include paths ----- ##############
INC:= $(OMXINC) -Irpi-staging/usr/include/             \
     -Isource/osapi/                                   \
     -Isource/framework/                               \
     -Isource/porting_layers/components/               \
     -Isource/porting_layers/av_pipe/                  \
     -I./


#list of files containing main() function, to prevent conflicts while linking
MAINFILES:=source/main/rpicast-server.cpp
           
OBJS:=$(patsubst %.cpp, %.o, $(filter-out $(MAINFILES),$(wildcard source/porting_layers/components/*.cpp)              \
                                                       $(wildcard source/framework/*.cpp)                              \
                                                       $(wildcard source/osapi/*.cpp)                                  \
                                                       $(wildcard source/porting_layers/av_pipe/*.cpp)))

############ ----- build main application ----- ##############

.PHONY: all
all: $(BUILD_PATH) libs $(TARGET) sample tests
	#@scp -r rpi-build/* 192.168.1.4:workspace/

$(BUILD_PATH):
	          @mkdir -p $@
	
.PHONY:libs
libs: $(TARGET_LIB)

$(TARGET_LIB): $(OBJS)
	           $(CXX) $(CFLAGS) -fpic -shared $^ -o $@ $(EXT_LDPATH) $(EXT_LDLIBS)

$(TARGET): source/main/rpicast-server.o
	       $(CXX) $(CFLAGS) $^ -o $@ $(LDFLAGS) $(EXT_LDPATH) $(EXT_LDLIBS) $(OMXLDFLAGS)

%.o: %.cpp
	 $(CXX) $(CFLAGS) $(OMXCFLAGS) $(INC) -c $< -o $@

############ ----- build samples ----- ##############

SAMPLES:= $(BUILD_PATH)/screencapture     \
          $(BUILD_PATH)/socket_server     \
          $(BUILD_PATH)/socket_client     \
          $(BUILD_PATH)/hello_world       \
          $(BUILD_PATH)/hello_video

SAMPLE_SRC_DIR:=samples

.PHONY: sample
sample: $(TARGET_LIB) $(SAMPLES)

$(BUILD_PATH)/%: $(SAMPLE_SRC_DIR)/%.o
	             $(CXX) $(CFLAGS) $^ -o $@ $(LDFLAGS) $(EXT_LDPATH) $(EXT_LDLIBS) $(OMXLDFLAGS)
			
############ ----- build tests ----- ##############

TESTS:= $(BUILD_PATH)/unittests            \
        $(BUILD_PATH)/test_osapi           \
        $(BUILD_PATH)/test_socket          \
        $(BUILD_PATH)/test_socket_capture  \
        $(BUILD_PATH)/test_demux           \
        $(BUILD_PATH)/test_ssdp

TEST_SRC_DIR:= source/tests

.PHONY: tests
tests: $(TARGET_LIB) $(TESTS)
	   	
$(BUILD_PATH)/%: $(TEST_SRC_DIR)/%.o
	             $(CXX) $(CFLAGS) $^ -o $@ $(LDFLAGS) $(EXT_LDPATH) $(EXT_LDLIBS) $(OMXLDFLAGS)

############ ----- cleaning ----- ##############

.PHONY: clean
clean:
	 @rm -f source/framework/*.o                 \
	        source/osapi/*.o                     \
	        source/main/*.o                      \
	        source/porting_layers/av_pipe/*.o    \
	        source/porting_layers/components/*.o \
	        source/tests/*.o                     \
	        samples/*.o

.PHONY:distclean
distclean:
	 @rm -f source/framework/*.o                 \
	        source/osapi/*.o                     \
	        source/main/*.o                      \
	        source/porting_layers/av_pipe/*.o    \
	        source/porting_layers/components/*.o \
	        source/tests/*.o                     \
	        samples/*.o                          \
	        $(TARGET)                            \
	        $(TARGET_LIB)                        \
	        $(BUILD_PATH)/*
